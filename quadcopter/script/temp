if abs(theta1-alpha)<abs(theta2-alpha) and abs(theta1-alpha)<=abs(theta-alpha):
                    flag+=1
                    if len(corner)<=2:
                        if direction[2*g[j]] == 1:
                            if 0<yaw<np.pi/2 or -np.pi<yaw<-np.pi/2:
                                co1[0]-=1
                                co1[1]+=1
                            else:
                                co1[0]+=1
                                co1[1]+=1
                        else:
                            if 0<yaw<np.pi/2 or -np.pi<yaw<-np.pi/2:
                                co1[0]+=1
                                co1[1]-=1
                            else:
                                co1[0]-=1
                                co1[1]-=1
                    
                    else:
                        if direction[2*g[j]]==0:
                            if j!=0:
                                co3 = get_coords([corner[2*g[j]-1][0], corner[2*g[j]-1][1]])
                            else:
                                co3 = [x + 1*cos(yaw-np.pi/2), y + 1*sin(yaw-np.pi/2)]
                            
                        elif direction[2*g[j]]==1:
                            if j!=len(corner)-1:
                                co3 = get_coords([corner[2*g[j]-1][0], corner[2*g[j]-1][1]])
                            else:
                                co3 = [x + 1*cos(yaw-np.pi/2), y + 1*sin(yaw-np.pi/2)]
                        co1[0] = (co1[0]+co3[0])/2   
                        co1[1] = (co1[1]+co3[1])/2   
                    theta = atan2((co1[1]-y),(co1[0]-x))
                    goal2.append(co1)
                elif abs(theta1-alpha)>=abs(theta2-alpha) and abs(theta2-alpha)<=abs(theta-alpha):
                    flag+=1
                    if len(corner)<=2:
                        if direction[2*g[j]+1] == 1:
                            if 0<yaw<np.pi/2 or -np.pi<yaw<-np.pi/2:
                                co2[0]-=1
                                co2[1]+=1
                            else:
                                co2[0]+=1
                                co2[1]+=1
                        else:
                            if 0<yaw<np.pi/2 or -np.pi<yaw<-np.pi/2:
                                co2[0]+=1
                                co2[1]-=1
                            else:
                                co2[0]-=1
                                co2[1]-=1

                    else:
                        if direction[2*g[j]]==0:
                            if j!=0:
                                co3 = get_coords([corner[2*g[j]-1][0], corner[2*g[j]-1][1]])
                            else:
                                co3 = [x + 1*cos(yaw-np.pi/2), y + 1*sin(yaw-np.pi/2)]
                            
                        elif direction[2*g[j]]==1:
                            if j!=len(corner)-1:
                                co3 = get_coords([corner[2*g[j]-1][0], corner[2*g[j]-1][1]])
                            else:
                                co3 = [x + 1*cos(yaw-np.pi/2), y + 1*sin(yaw-np.pi/2)]
                        co2[0] = (co2[0]+co3[0])/2   
                        co2[1] = (co2[1]+co3[1])/2     
                    goal2.append(co2)
                    theta = atan2((co2[1]-y),(co2[0]-x))